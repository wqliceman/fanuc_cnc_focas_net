<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>


<root>
  <func>


    <title>cnc_wropnlgsname</title>



    <declare>
      <vc>
        <include>#include "fwlib32.h"</include>
        <prottype>FWLIBAPI short WINAPI cnc_wropnlgsname(unsigned short FlibHndl, IODBRDNA *brdna);</prottype>
      </vc>
    </declare>



    <doc>
        <cmn>
            <p>
              Writes the general signal name of software operator's panel.
            </p>
      </cmn>
    </doc>



    <argument>
        <common>
            <vc>
                <item>
                    <name>FlibHndl</name>
                    <type>in</type>
                    <content>
                        <p>
                            Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                        </p>
                    </content>
                </item>
                <item>
                    <name>brdna</name>
                    <type>in</type>
                    <content>
                        <p>
                            Pointer to the IODBRDNA structure to set the general signal name of software operator's panel.
                        </p>
The IODBRDNA structure is as follows.
<pre>
typedef struct iodbrdna {
     short  datano;         /* Not used */
     short  type;           /* Data select flag */
     char   sgnl1_name[9];  /* General signal name 1 (ASCII) */
     char   sgnl2_name[9];  /* General signal name 2 (ASCII) */
     char   sgnl3_name[9];  /* General signal name 3 (ASCII) */
     char   sgnl4_name[9];  /* General signal name 4 (ASCII) */
     char   sgnl5_name[9];  /* General signal name 5 (ASCII) */
     char   sgnl6_name[9];  /* General signal name 6 (ASCII) */
     char   sgnl7_name[9];  /* General signal name 7 (ASCII) */
     char   sgnl8_name[9];  /* General signal name 8 (ASCII) */
} IODBRDNA ;
</pre>
<dl>
    <dt>datano</dt>
        <dd>Not used.</dd>
    <dt>type</dt>
        <dd>Specify the selection flag.</dd>
        <dd><table class="dd">
            <tr><td>bit 0</td><td>:</td><td>General-purpose signal 1</td></tr>
            <tr><td>bit 1</td><td>:</td><td>General-purpose signal 2</td></tr>
            <tr><td>bit 2</td><td>:</td><td>General-purpose signal 3</td></tr>
            <tr><td>bit 3</td><td>:</td><td>General-purpose signal 4</td></tr>
            <tr><td>bit 4</td><td>:</td><td>General-purpose signal 5</td></tr>
            <tr><td>bit 5</td><td>:</td><td>General-purpose signal 6</td></tr>
            <tr><td>bit 6</td><td>:</td><td>General-purpose signal 7</td></tr>
            <tr><td>bit 7</td><td>:</td><td>General-purpose signal 8</td></tr>
        </table></dd>
        <dd><ul style="list-style-type:none">
            <li>* Bit 8 to 15 is not used.</li>
            <li>* When the bit corresponding to the signal is set to 0, that signal is not written. To write the signal, set the corresponding bit to 1. </li>
        </ul></dd>
    <dt>sgnl1_name</dt>
        <dd>Specify the general signal name 1 (ASCII). </dd>
    <dt>sgnl2_name</dt>
        <dd>Specify the general signal name 2 (ASCII). </dd>
    <dt>sgnl3_name</dt>
        <dd>Specify the general signal name 3 (ASCII). </dd>
    <dt>sgnl4_name</dt>
        <dd>Specify the general signal name 4 (ASCII). </dd>
    <dt>sgnl5_name</dt>
        <dd>Specify the general signal name 5 (ASCII). </dd>
    <dt>sgnl6_name</dt>
        <dd>Specify the general signal name 6 (ASCII). </dd>
    <dt>sgnl7_name</dt>
        <dd>Specify the general signal name 7 (ASCII). </dd>
    <dt>sgnl8_name</dt>
        <dd>Specify the general signal name 8 (ASCII). </dd>
        <dd><br/></dd>
        <dd>Eight characters from the top of each name (sgnl?_name[0] - sgnl?_name[7]) is set by CNC.</dd>
</dl>
                    </content>
                </item>
            </vc>
        </common>
    </argument>



    <errcode>
        <item>
            <name>EW_NOOPT</name>
            <content>
                No option<br/>
                The extended driver/library function is necessary.
           </content>
        </item>
        <add></add>
    </errcode>



    <option>
        <hssb>The extended driver/library function is necessary.</hssb>
        <ethr><p>The Ethernet function and the extended driver/library function are necessary.</p>
              <p>However, in case of Series 16i/18i/21i-B, 0i-B/C/D, Series 30i and PMi-A, the required CNC option is as follows.</p>
              <p>When Embedded Ethernet is used,</p>
              <p><ul>above two optional functions are not required.</ul></p>
              <p>When Ethernet board is used,</p>
              <p><ul>only Ethernet function is required.</ul></p>
        </ethr>
        <add></add>
    </option>



    <parameter>
        <add></add>
    </parameter>



    <mode></mode>



    <support>
        <m>
            <fs0ia>H</fs0ia>
            <fs0ib>O</fs0ib>
            <fs0id>O</fs0id>
             <fs15>H</fs15>
            <fs15i>O</fs15i>
             <fs16>H</fs16>
             <fs18>H</fs18>
             <fs21>H</fs21>
           <fs16ia>O</fs16ia>
           <fs18ia>O</fs18ia>
           <fs21ia>O</fs21ia>
           <fs16ib>O</fs16ib>
           <fs18ib>O</fs18ib>
           <fs21ib>O</fs21ib>
           <fs30ia>O</fs30ia>
           <fs30ib>O</fs30ib>
        </m>
        <t>
            <fs0ia>H</fs0ia>
            <fs0ib>O</fs0ib>
            <fs0id>O</fs0id>
             <fs15>H</fs15>
            <fs15i>X</fs15i>
             <fs16>H</fs16>
             <fs18>H</fs18>
             <fs21>H</fs21>
           <fs16ia>O</fs16ia>
           <fs18ia>O</fs18ia>
           <fs21ia>O</fs21ia>
           <fs16ib>O</fs16ib>
           <fs18ib>O</fs18ib>
           <fs21ib>O</fs21ib>
           <fs30ia>O</fs30ia>
           <fs30ib>O</fs30ib>
        </t>
        <lc>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
             <fs15>X</fs15>
            <fs15i>X</fs15i>
             <fs16>X</fs16>
             <fs18>X</fs18>
             <fs21>X</fs21>
           <fs16ia>X</fs16ia>
           <fs18ia>X</fs18ia>
           <fs21ia>X</fs21ia>
           <fs16ib>X</fs16ib>
           <fs18ib>X</fs18ib>
           <fs21ib>X</fs21ib>
           <fs30ia>X</fs30ia>
           <fs30ib>X</fs30ib>
        </lc>
        <p>
            <fs0id>O</fs0id>
            <fs16i>O</fs16i>
            <fs18i>O</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </p>
        <l>
            <fs0id>X</fs0id>
            <fs16i>O</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </l>
        <w>
            <fs0id>X</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </w>
        <pw>
            <d>O</d>
            <h>O</h>
            <a>O</a>
        </pw>
        <!-- 30i(WinCE) -->
        <is>
            <m>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </m>
            <t>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </t>
        </is>
        <add><b></b></add>
    </support>



    <reference>
        <item>
            <name>cnc_rdopnlsgnl</name>
            <file>misc/cnc_rdopnlsgnl.htm</file>
        </item>
        <item>
            <name>cnc_wropnlsgnl</name>
            <file>misc/cnc_wropnlsgnl.htm</file>
        </item>
        <item>
            <name>cnc_rdopnlgnrl</name>
            <file>misc/cnc_rdopnlgnrl.htm</file>
        </item>
        <item>
            <name>cnc_wropnlgnrl</name>
            <file>misc/cnc_wropnlgnrl.htm</file>
        </item>
        <item>
            <name>cnc_rdopnlgsname</name>
            <file>misc/cnc_rdopnlgsname.htm</file>
        </item>
    </reference>



    <example></example>



  </func>
</root>
