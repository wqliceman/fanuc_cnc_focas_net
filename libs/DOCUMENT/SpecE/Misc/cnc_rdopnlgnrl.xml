<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>


<root>
  <func>


    <title>cnc_rdopnlgnrl</title>



    <declare>
      <vc>
        <include>#include "fwlib32.h"</include>
        <prottype>FWLIBAPI short WINAPI cnc_rdopnlgnrl(unsigned short FlibHndl, short slct_data, IODBGNRL *opnlgnrl);</prottype>
      </vc>
    </declare>



    <doc>
        <cmn>
            <p>
              Reads the general output signal image of software operator's panel.
            </p>
      </cmn>
    </doc>



    <argument>
        <common>
            <vc>
                <item>
                    <name>FlibHndl</name>
                    <type>in</type>
                    <content>
                        <p>
                            Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                        </p>
                    </content>
                </item>
                <item>
                    <name>slct_data</name>
                    <type>in</type>
                    <content>
                        <p>
                            Specify the data selection flag.
                        </p>
<table class="dd">
    <tr><td>bit 0</td><td>:</td><td>General-purpose signal 1</td></tr>
    <tr><td>bit 1</td><td>:</td><td>General-purpose signal 2</td></tr>
    <tr><td>bit 2</td><td>:</td><td>General-purpose signal 3</td></tr>
    <tr><td>bit 3</td><td>:</td><td>General-purpose signal 4</td></tr>
    <tr><td>bit 4</td><td>:</td><td>General-purpose signal 5</td></tr>
    <tr><td>bit 5</td><td>:</td><td>General-purpose signal 6</td></tr>
    <tr><td>bit 6</td><td>:</td><td>General-purpose signal 7</td></tr>
    <tr><td>bit 7</td><td>:</td><td>General-purpose signal 8</td></tr>
</table>
<ul style="list-style-type:none">
    <li>* Bit 8 to 15 is not used.</li>
    <li>* When the bit corresponding to the signal is set to 0, that signal is not read. To read the signal, set the corresponding bit to 1.</li>
</ul>
                    </content>
                </item>
                <item>
                    <name>opnlgnrl</name>
                    <type>out</type>
                    <content>
                        <p>
                            Pointer to the IODBGNRL structure including the general output signal image of software operator's panel. The IODBGNRL structure is as follows.
                        </p>

<pre>
typedef struct iodbgnrl {
     short     datano;      /* Not used */
     short     type;        /* Data select flag */
     char      sgnal;       /* General-purpose signal 1 to 8 */
} IODBGNRL ;
</pre>
<dl>
    <dt>datano</dt>
        <dd>Not used.</dd>

    <dt>type</dt>
        <dd>Data selection flag is stored.</dd>

    <dt>sgnal</dt>
        <dd>General-purpose signal is stored.</dd>
        <dd><table>
            <tr><td>bit 0</td><td>:</td><td>General-purpose signal 1</td></tr>
            <tr><td>bit 1</td><td>:</td><td>General-purpose signal 2</td></tr>
            <tr><td>bit 2</td><td>:</td><td>General-purpose signal 3</td></tr>
            <tr><td>bit 3</td><td>:</td><td>General-purpose signal 4</td></tr>
            <tr><td>bit 4</td><td>:</td><td>General-purpose signal 5</td></tr>
            <tr><td>bit 5</td><td>:</td><td>General-purpose signal 6</td></tr>
            <tr><td>bit 6</td><td>:</td><td>General-purpose signal 7</td></tr>
            <tr><td>bit 7</td><td>:</td><td>General-purpose signal 8</td></tr>
        </table></dd>
</dl>
                    </content>
                </item>
            </vc>
        </common>
    </argument>



    <errcode>
        <item>
            <name>EW_NOOPT</name>
            <content>
                No option<br/>
                The software operator's panel general SW function and the extended driver/library function are necessary.
           </content>
        </item>
        <add></add>
    </errcode>



    <option>
        <hssb>The extended driver/library function is necessary.</hssb>
        <ethr><p>The Ethernet function and the extended driver/library function are necessary.</p>
              <p>However, in case of Series 16i/18i/21i-B, 0i-B/C/D, Series 30i and PMi-A, the required CNC option is as follows.</p>
              <p>When Embedded Ethernet is used,</p>
              <p><ul>above two optional functions are not required.</ul></p>
              <p>When Ethernet board is used,</p>
              <p><ul>only Ethernet function is required.</ul></p>
        </ethr>
        <need>The software operator's panel general SW function is necessary.</need>
        <add></add>
    </option>



    <parameter>
        <add></add>
    </parameter>



    <mode></mode>



    <support>
        <m>
            <fs0ia>H</fs0ia>
            <fs0ib>O</fs0ib>
            <fs0id>O</fs0id>
            <fs15>H</fs15>
            <fs15i>O</fs15i>
            <fs16>H</fs16>
            <fs18>H</fs18>
            <fs21>H</fs21>
            <fs16ia>O</fs16ia>
            <fs18ia>O</fs18ia>
            <fs21ia>O</fs21ia>
            <fs16ib>O</fs16ib>
            <fs18ib>O</fs18ib>
            <fs21ib>O</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </m>
        <t>
            <fs0ia>H</fs0ia>
            <fs0ib>O</fs0ib>
            <fs0id>O</fs0id>
            <fs15>H</fs15>
            <fs15i>X</fs15i>
            <fs16>H</fs16>
            <fs18>H</fs18>
            <fs21>H</fs21>
            <fs16ia>O</fs16ia>
            <fs18ia>O</fs18ia>
            <fs21ia>O</fs21ia>
            <fs16ib>O</fs16ib>
            <fs18ib>O</fs18ib>
            <fs21ib>O</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </t>
        <lc>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </lc>
        <p>
            <fs0id>O</fs0id>
            <fs16i>O</fs16i>
            <fs18i>O</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </p>
        <l>
            <fs0id>X</fs0id>
            <fs16i>O</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </l>
        <w>
            <fs0id>X</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </w>
        <pw>
            <d>O</d>
            <h>O</h>
            <a>O</a>
        </pw>
        <!-- 30i(WinCE) -->
        <is>
            <m>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </m>
            <t>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </t>
        </is>
        <add><b></b></add>
    </support>



    <reference>
        <item>
            <name>cnc_rdopnlsgnl</name>
            <file>misc/cnc_rdopnlsgnl.htm</file>
        </item>
        <item>
            <name>cnc_wropnlsgnl</name>
            <file>misc/cnc_wropnlsgnl.htm</file>
        </item>
        <item>
            <name>cnc_wropnlgnrl</name>
            <file>misc/cnc_wropnlgnrl.htm</file>
        </item>
        <item>
            <name>cnc_rdopnlgsname</name>
            <file>misc/cnc_rdopnlgsname.htm</file>
        </item>
        <item>
            <name>cnc_wropnlgsname</name>
            <file>misc/cnc_wropnlgsname.htm</file>
        </item>
    </reference>



    <example></example>



  </func>
</root>
