<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>
<root>
    <func>


        <title>cnc_sdtreadsmpl</title>



        <declare>
            <vc>
                <include>#include "fwlib32.h"</include>
                <prottype>FWLIBAPI short WINAPI cnc_sdtreadsmpl(unsigned short FlibHndl, short *stat, long datanum, ODBSD *sampledata); </prottype>
            </vc>
        </declare>



        <doc>
            <cmn>
                <p>Reads the sampling data.<br/>
                   (The cycle of sampling is 1msec.) </p>
            </cmn>
        </doc>



        <argument>
            <common>
                <vc>
                    <item>
                        <name>FlibHndl</name>
                        <type>in</type>
                        <content>
                            <p>
                                Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>stat</name>
                        <type>out</type>
                        <content>
                            <p>
                                Specify the pointer to the variable in which the status of data reading is stored.
                            </p>
                            <table border="0" class="dd">
                                <tr><td>-1</td><td>ÅF</td><td>Sampling standby.</td></tr>
                                <tr><td> 0</td><td>ÅF</td><td>End of reading sampling data.</td></tr>
                                <tr><td> 1</td><td>ÅF</td><td>Under reading sampling data. (Sampling data exists yet.)</td></tr>
                            </table>
                            <p>When this argument(stat) is "0", execute the cnc_sdtendsmpl.</p>
                        </content>
                    </item>
                    <item>
                        <name>datanum</name>
                        <type>in</type>
                        <content>
                            <p>
                                Specify the number of sampling data which you want to read. (Specify the value of eight or more.)<br/>
                                Reading process is executed every 8WORD unit.  So, specify the multiple of eight as much as possible for this value.
                            </p>
                        </content>
                    </item>
                    <item>
                        <name>sampledata</name>
                        <type>out</type>
                        <content>
                            <p>
                                Specify the pointer to the array of ODBSD structure to store the sampling data. The sampling data is acquired in order of channel which was setted by cnc_sdtsetchnl function.
                            </p>
                            <p>
                                The structure of ODBSD is as follows.
                            </p>
<pre>
typedef struct odbsd {
    unsigned short  *chadata;   /* Pointer to sampling data  */
    long            *count;     /* Pointer to reading number */
} ODBSD;
</pre>
                            <p>
                                Prepare the buffer area for the sampling data and the area for the number of actually read data.  And the each pointer is set to ODBSD structure.<br/>
                                Prepare ODBSD structures of the same number of channels as array.<br/>
                                And specify the top pointer of this array to this argument. After the function is executed normally, the actual number of reading data in each channel is acquired in *count.
                            </p><br/>

                        </content>
                    </item>
               </vc>
            </common>
        </argument>



        <errcode>
            <item>
                <name>EW_NUMBER</name>
                <content>
                    the number of sampling data(datanum) is wrong. (The value of eight or more was not specified.)
                </content>
            </item>
            <item>
                <name>EW_BUFFER</name>
                <content>
                    Read buffer is full.<br/>
                    The inner buffer for reading becomes full, so the processing was canceled.
                </content>
            </item>
            <item>
                <name>EW_REJECT</name>
                <content>
                    CNC execution denied
                    <table>
                        <colgroup align="center" valign="top">
                        <colgroup align="center" valign="top">
                        <colgroup valign="top">
                        <tr><td> 1</td><td>:</td><td>Sampling start function(cnc_sdtstartsmpl) is not executed.</td></tr>
                        </colgroup>
                        </colgroup>
                        </colgroup>
                    </table>
                </content>
            </item>
        </errcode>



        <option>
            <hssb>
                The extended driver/library function is necessary.
            </hssb>
            <ethr>
                <p>The Ethernet function and the extended driver/library function are necessary.</p>
                <p>However, in case of 0i-D, Series 30i and PMi-A, the required CNC option is as follows.</p>
                <p>When Embedded Ethernet is used,</p>
                <p><ul>above two optional functions are not required.</ul></p>
                <p>When Ethernet board is used,</p>
                <p><ul>only Ethernet function is required.</ul></p>
            </ethr>

            <is>
                <hssb>
                    The following functions are necessary for this function.
                    <ul type="disc">
                        <li>The extended driver/library function.</li>
                    </ul>
                </hssb>
            </is>
        </option>



        <parameter></parameter>



        <mode></mode>



        <support>
            <m>
                <fs0ia>X</fs0ia>
                <fs0ib>X</fs0ib>
                <fs0id>O</fs0id>
                <fs15>X</fs15>
                <fs15i>X</fs15i>
                <fs16>X</fs16>
                <fs18>X</fs18>
                <fs21>X</fs21>
                <fs16ia>X</fs16ia>
                <fs18ia>X</fs18ia>
                <fs21ia>X</fs21ia>
                <fs16ib>X</fs16ib>
                <fs18ib>X</fs18ib>
                <fs21ib>X</fs21ib>
                <fs30ia>O</fs30ia>
                <fs30ib>O</fs30ib>
            </m>
            <t>
                <fs0ia>X</fs0ia>
                <fs0ib>X</fs0ib>
                <fs0id>O</fs0id>
                <fs15>X</fs15>
                <fs15i>X</fs15i>
                <fs16>X</fs16>
                <fs18>X</fs18>
                <fs21>X</fs21>
                <fs16ia>X</fs16ia>
                <fs18ia>X</fs18ia>
                <fs21ia>X</fs21ia>
                <fs16ib>X</fs16ib>
                <fs18ib>X</fs18ib>
                <fs21ib>X</fs21ib>
                <fs30ia>O</fs30ia>
                <fs30ib>O</fs30ib>
            </t>
            <lc>
                <fs0ia>X</fs0ia>
                <fs0ib>X</fs0ib>
                <fs0id>X</fs0id>
                <fs15>X</fs15>
                <fs15i>X</fs15i>
                <fs16>X</fs16>
                <fs18>X</fs18>
                <fs21>X</fs21>
                <fs16ia>X</fs16ia>
                <fs18ia>X</fs18ia>
                <fs21ia>X</fs21ia>
                <fs16ib>X</fs16ib>
                <fs18ib>X</fs18ib>
                <fs21ib>X</fs21ib>
                <fs30ia>X</fs30ia>
                <fs30ib>X</fs30ib>
            </lc>
            <p>
                <fs0id>X</fs0id>
                <fs16i>X</fs16i>
                <fs18i>X</fs18i>
                <fs30ia>X</fs30ia>
                <fs30ib>X</fs30ib>
            </p>
            <l>
                <fs0id>X</fs0id>
                <fs16i>X</fs16i>
                <fs18i>X</fs18i>
                <fs30ia>X</fs30ia>
                <fs30ib>X</fs30ib>
            </l>
            <w>
                <fs0id>X</fs0id>
                <fs16i>X</fs16i>
                <fs18i>X</fs18i>
                <fs30ia>X</fs30ia>
                <fs30ib>X</fs30ib>
            </w>
            <pw>
                <d>X</d>
                <h>X</h>
                <a>O</a>
            </pw>
            <is>
                <m>
                    <fs30isa>O</fs30isa>
                    <fs30isb>O</fs30isb>
                </m>
                <t>
                    <fs30isa>O</fs30isa>
                    <fs30isb>O</fs30isb>
                </t>
            </is>
        </support>



    <reference>
        <item>
            <name>cnc_sdtsetchnl</name>
            <file>motor/cnc_sdtsetchnl.htm</file>
        </item>
        <item>
            <name>cnc_sdtclrchnl</name>
            <file>motor/cnc_sdtclrchnl.htm</file>
        </item>
        <item>
            <name>cnc_sdtstartsmpl</name>
            <file>motor/cnc_sdtstartsmpl.htm</file>
        </item>
        <item>
            <name>cnc_sdtcancelsmpl</name>
            <file>motor/cnc_sdtcancelsmpl.htm</file>
        </item>
        <item>
            <name>cnc_sdtendsmpl</name>
            <file>motor/cnc_sdtendsmpl.htm</file>
        </item>
        <item>
            <name>cnc_sdtread1shot</name>
            <file>motor/cnc_sdtread1shot.htm</file>
        </item>
    </reference>



    </func>
</root>
