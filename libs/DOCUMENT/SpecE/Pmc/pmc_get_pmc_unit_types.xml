<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>

<root>
  <func>


    <title>pmc_get_pmc_unit_types</title>



    <declare>
      <vc>
        <include>#include "fwlib32.h"</include>
        <prottype>FWLIBAPI short WINAPI pmc_get_pmc_unit_types ( unsigned short FlibHndl, long unittypes[], long * count );</prottype>
      </vc>
    </declare>



    <doc>
        <cmn>
            Reads the PMC system information that shows what kind of PMC units compose the multi-path PMC system.
        </cmn>
    </doc>



    <argument>
        <common>
            <vc>
                <item>
                    <name>FlibHndl</name>
                    <type>in</type>
                    <content>
                        <p>
                            Specify the library handle.
                            See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                        </p>
                    </content>
                </item>
                <item>
                    <name>unittypes</name>
                    <type>out</type>
                    <content>
                        Specify the pointer to an array of "long" where the "Unit Type" of each PMC path will be stored.<br/>
                        The maximum number of PMC paths is 4, and the actual number of PMC paths can be got by
                        <a href="Pmc/pmc_get_number_of_pmc.htm" target="_parent">pmc_get_number_of_pmc</a>.
                        Each element of the array shows the "Unit Type" of the PMC path as following values.<br/>
                        <br/>
                        <table border="1">
                            <tr><th>Value</th><th>Unit type</th></tr>
                            <tr><td>0</td><td>PMC not exists</td></tr>
                            <tr><td>PMCUNIT_PMC1 (1)</td><td>1st PMC</td></tr>
                            <tr><td>PMCUNIT_PMC2 (2)</td><td>2nd PMC</td></tr>
                            <tr><td>PMCUNIT_PMC3 (3)</td><td>3rd PMC</td></tr>
                            <tr><td>PMCUNIT_DCS (9)</td><td>Dual-check safety PMC</td></tr>
                        </table>
                        <br/>
                        The PMC unit type can be got from this array by using the PMC path number as the index.
                    </content>
                </item>
                <item>
                    <name>count</name>
                    <type>in/out</type>
                    <content>
                        Specify the pointer where the number of elements of unittypes[] is stored.<br/>
                        Before calling this function, set the element number of the array, unittypes[],
                        where this pointer shows.  This function returns the number of elements (number of PMC paths)
                        that is actually got, storing to this pointer.
                    </content>
                </item>
            </vc>
        </common>
    </argument>



    <errcode>
        <add></add>
    </errcode>



    <option>
        <hssb>The extended driver/library function is necessary.</hssb>
        <ethr><p>The Ethernet function and the extended driver/library function are necessary.</p>
              <p>However, in case of Series 0i-D, Series 30i and PMi-A, the required CNC option is as follows.</p>
              <p>When Embedded Ethernet is used,</p>
              <p><ul>above two optional functions are not required.</ul></p>
              <p>When Ethernet board is used,</p>
              <p><ul>only Ethernet function is required.</ul></p>
        </ethr>
    </option>



    <parameter></parameter>



    <mode>
    </mode>



    <support>
        <m>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>O</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </m>
        <t>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>O</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </t>
        <lc>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </lc>
        <p>
            <fs0id>O</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </p>
        <l>
            <fs0id>X</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </l>
        <w>
            <fs0id>X</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </w>
        <pw>
            <d>X</d>
            <h>X</h>
            <a>O</a>
        </pw>

        <is>
            <m>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </m>
            <t>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </t>
            <w>
                <fs30isa>O</fs30isa>
                <fs30isb>X</fs30isb>
            </w>
        </is>
    </support>



    <reference>
        <item>
            <name>pmc_select_pmc_unit</name>
            <file>pmc/pmc_select_pmc_unit.htm</file>
        </item>
        <item>
            <name>pmc_get_current_pmc_unit</name>
            <file>pmc/pmc_get_current_pmc_unit.htm</file>
        </item>
        <item>
            <name>pmc_get_number_of_pmc</name>
            <file>pmc/pmc_get_number_of_pmc.htm</file>
        </item>
    </reference>



  </func>
</root>
