<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>

<root>
  <func>


    <title>cnc_rdpmacro</title>



    <declare>
      <vc>
        <include>#include "fwlib32.h"</include>
        <prottype>FWLIBAPI short WINAPI cnc_rdpmacro(unsigned short FlibHndl, long number, ODBPM *pmacro);</prottype>
      </vc>
    </declare>



    <doc>
        <cmn>
            <p>Reads the P code macro variable (variable for the macro-executor) specified by "number". The data is stored in "ODBPM" with signed binary format.</p>

            <p>It is possible to exchange the type of P code macro variable by <a href="ncdata/cnc_setpmactype.htm" target="_parent">cnc_setpmactype</a> function. In case of the integer type variable, this indication is invalid and always regarded as the decimal form floating-point type.</p>


            <ul>
                <li>decimal form floating-point type (data format=M*10**(-E))</li>
                <table>
                    <colgroup valign="top">
                    <colgroup valign="top">
                    <colgroup valign="top">
                    <tr>
                        <td>mcr_val</td>
                        <td>:</td>
                        <td>value of variable (=M)<br/>
                        4-byte binary data with sign<br/>
                        (available range:999999999,..,-999999999, integer type:-32768,..,32767)</td>
                    </tr>
                    <tr>
                        <td>dec_val</td>
                        <td>:</td>
                        <td>number of places of decimals (=E)<br/>
                        2-byte binary data with sign<br/>
                        (available range:-128,..,127, integer type : 0)</td>
                    </tr>
                    </colgroup>
                    </colgroup>
                    </colgroup>
                </table>

                <p>mcr_val always returns by nine digits and adjusts the amount with the value of dec_val.</p><br/>

                <blockquote>
                    Example: When the variable value is 12.345, mcr_val and dec_val are read as follows.<br/>
                    mcr_val = 123450000<br/>
                    dec_val = 7
                </blockquote>

                <li>binary form floating-point type (data format=M*2**(-E))</li>
                <table>
                    <colgroup valign="top">
                    <colgroup valign="top">
                    <colgroup valign="top">
                    <tr>
                        <td>mcr_val</td>
                        <td>:</td>
                        <td>numerical part of variable (=M)<br/>
                        4-byte binary data with sign<br/>
                        (available range:No limitation)</td>
                    </tr>
                    <tr>
                        <td>dec_val</td>
                        <td>:</td>
                        <td>exponent part of variable (=E)<br/>
                        2-byte binary data with sign<br/>
                        (available range:-128,..,127)</td>
                    </tr>
                    </colgroup>
                    </colgroup>
                    </colgroup>
                </table>

            </ul>

            <p>The value of an undefined variable is called "vacant", and it is expressed as follows both at decimal form floating-point type and at binary form floating-point type.</p>

            <blockquote>
                <p>mcr_val = 0<br/>
                dec_val = -1</p>
            </blockquote>

            <p>See the "PROGRAMING MANUAL" of the macro-executor for details of the P code macro variable.</p>
        </cmn>
    </doc>



    <argument>
        <common>
            <vc>
                <item>
                    <name>FlibHndl</name>
                    <type>in</type>
                    <content>
                        <p>
                            Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                        </p>
                    </content>
                </item>
                <item>
                    <name>number</name>
                    <type>in</type>
                    <content>
                        <p>Specify the P code macro variable number. See the description of <a href="ncdata/cnc_rdpmacroinfo.htm" target="_parent">cnc_rdpmacroinfo</a> function about the available range.</p>
                    </content>
                </item>
                <item>
                    <name>pmacro</name>
                    <type>out</type>
                    <content>
                        <p>Pointer to the ODBPM structure including the P code macro variable. The ODBPM structure is as follows.</p>

<pre>
typedef struct  odbpm {
    long    datano ;    /* P code macro variable number */
    short   dummy ;     /* (not used) */
    long    mcr_val ;   /* value of P code macro */
    short   dec_val ;   /* number of places of decimals */
} ODBPM ;
</pre>
                    </content>
                </item>
            </vc>
        </common>
    </argument>



    <errcode>
        <item>
            <name>EW_NUMBER</name>
            <content>Data number error<br/>P code macro variable number(number) is wrong.</content>
        </item>
        <item>
            <name>EW_NOOPT</name>
            <content>No option<br/>This function needs the macro-executor option.</content>
        </item>
        <item class="xis">
            <name>EW_PASSWD</name>
            <content>Specified P code macro variable cannot be read because the data is protected.<br/>
                    ( Series 16i/18i/21i, 0i-A/B/C )</content>
        </item>
    </errcode>



    <option>
        <hssb>The extended driver/library function is necessary.</hssb>
        <ethr><p>The Ethernet function and the extended driver/library function are necessary.</p>
              <p>However, in case of Series 16i/18i/21i-B, 0i-B/C/D, Series 30i and PMi-A, the required CNC option is as follows.</p>
              <p>When Embedded Ethernet is used,</p>
              <p><ul>above two optional functions are not required.</ul></p>
              <p>When Ethernet board is used,</p>
              <p><ul>only Ethernet function is required.</ul></p>
        </ethr>
        <need>The macro-executor function.</need>
        <type class="xis">
            <li>Series 16/18, 16i/18i</li>
            This function is related to the high-speed cycle cutting option.
        </type>
    </option>



    <parameter>
        <add>
            <p>But, this function is related to the compile parameter of the macro-executor. See the "PROGRAMING MANUAL" of the macro-executor for details of the compile parameter.</p>
        </add>
    </parameter>



    <mode>
    </mode>



    <support>
        <m>
            <fs0ia>H</fs0ia>
            <fs0ib>O</fs0ib>
            <fs0id>O</fs0id>
            <fs15>H</fs15>
            <fs15i>O</fs15i>
            <fs16>H</fs16>
            <fs18>H</fs18>
            <fs21>H</fs21>
            <fs16ia>O</fs16ia>
            <fs18ia>O</fs18ia>
            <fs21ia>O</fs21ia>
            <fs16ib>O</fs16ib>
            <fs18ib>O</fs18ib>
            <fs21ib>O</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </m>
        <t>
            <fs0ia>H</fs0ia>
            <fs0ib>O</fs0ib>
            <fs0id>O</fs0id>
            <fs15>H</fs15>
            <fs15i>X</fs15i>
            <fs16>H</fs16>
            <fs18>H</fs18>
            <fs21>H</fs21>
            <fs16ia>O</fs16ia>
            <fs18ia>O</fs18ia>
            <fs21ia>O</fs21ia>
            <fs16ib>O</fs16ib>
            <fs18ib>O</fs18ib>
            <fs21ib>O</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </t>
        <lc>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>H</fs16>
            <fs18>H</fs18>
            <fs21>H</fs21>
            <fs16ia>H</fs16ia>
            <fs18ia>H</fs18ia>
            <fs21ia>H</fs21ia>
            <fs16ib>H</fs16ib>
            <fs18ib>H</fs18ib>
            <fs21ib>H</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </lc>
        <p>
            <fs0id>O</fs0id>
            <fs16i>O</fs16i>
            <fs18i>O</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </p>
        <l>
            <fs0id>X</fs0id>
            <fs16i>O</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </l>
        <w>
            <fs0id>X</fs0id>
            <fs16i>O</fs16i>
            <fs18i>O</fs18i>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </w>
        <pw>
            <d>O</d>
            <h>O</h>
            <a>O</a>
        </pw>
        <add><b></b></add>

        <is>
            <m>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </m>
            <t>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </t>
            <w>
                <fs30isa>O</fs30isa>
                <fs30isb>X</fs30isb>
            </w>
        </is>
    </support>



    <reference>
        <item>
            <name>cnc_wrpmacro</name>
            <file>ncdata/cnc_wrpmacro.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacror</name>
            <file>ncdata/cnc_rdpmacror.htm</file>
        </item>
        <item>
            <name>cnc_wrpmacror</name>
            <file>ncdata/cnc_wrpmacror.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacror2</name>
            <file>ncdata/cnc_rdpmacror2.htm</file>
        </item>
        <item>
            <name>cnc_wrpmacror2</name>
            <file>ncdata/cnc_wrpmacror2.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacroinfo</name>
            <file>ncdata/cnc_rdpmacroinfo.htm</file>
        </item>
        <item>
            <name>cnc_getpmactype</name>
            <file>ncdata/cnc_getpmactype.htm</file>
        </item>
        <item>
            <name>cnc_setpmactype</name>
            <file>ncdata/cnc_setpmactype.htm</file>
        </item>
    </reference>



    <example>
<vc>
The following program reads the P code macro variable of the specified number
and displays it.

#include "fwlib32.h"

/* number is variable number to be read. */
short example( long number )
{
        ODBPM pmacro ;
        char strbuf[11] ;
        short ret ;
        ret = cnc_rdpmacro( h, number, &#38;pmacro ) ;
        if ( !ret ) {
                sprintf( &#38;strbuf[1], "%09ld", pmacro.mcr_val ) ;
                if ( strbuf[1] == '0' ) strbuf[1] = ' ' ;
                strncpy( &#38;strbuf[0], &#38;strbuf[1], 9 - pmacro.dec_val ) ;
                strbuf[9-pmacro.dec_val] = '.' ;
                printf( "%s\n", strbuf ) ;
        }
        else
                printf( "**********\n" ) ;
        return ( ret ) ;
}
</vc>
    </example>



  </func>
</root>
