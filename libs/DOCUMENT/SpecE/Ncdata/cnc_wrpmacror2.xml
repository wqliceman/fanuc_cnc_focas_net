<?xml version="1.0" encoding="Shift_JIS"?>
<?xml-stylesheet type="text/xsl" href="../Fmethod_xsl/fmethod_he_c.xsl"?>

<root>
  <func>


    <title>cnc_wrpmacror2</title>



    <declare>
      <vc>
        <include>#include "fwlib32.h"</include>
        <prottype>FWLIBAPI short WINAPI cnc_wrpmacror2(unsigned short FlibHndl, unsigned long stnum, unsigned long *num, unsigned short type, double *pmacror);</prottype>
      </vc>
    </declare>



    <doc>
        <cmn>
            <p>Writes the P code macro variables(variables for the macro-executor) specified by the starting number, "stnum", and number of variables, "*num". The data is stored in "pmacror" with double format. It is not influenced by setting of <a href="ncdata/cnc_setpmactype.htm" target="_parent">cnc_setpmactype</a> function.</p>
            <p>The value of an undefined variable is called "vacant", and it is expressed as follows.</p>

            <p class="dd">0xFFFFFFFFFFFFFFFF</p>

            <p>See the "PROGRAMING MANUAL" of the macro-executor for details of the P code macro variable.</p>

        </cmn>
    </doc>



    <argument>
        <common>
            <cmn>
                <item>
                    <name>FlibHndl</name>
                    <type>in</type>
                    <content>
                        <p>
                            Specify the library handle. See "<a href="handle.htm" target="_parent">Library handle</a>" for details.
                        </p>
                    </content>
                </item>
                <item>
                    <name>stnum</name>
                    <type>in</type>
                    <content>
                        <p>Specify the starting P code macro variable number.<br/>
                           Please refer to the document of the <a href="ncdata/cnc_rdpmacroinfo2.htm" target="_parent">cnc_rdpmacroinfo2</a> for the range of variable.</p>
                    </content>
                </item>
                <item>
                    <name>num</name>
                    <type>in/out</type>
                    <content>
                        <p>Specify pointer to the number of P code macro variable.<br/>
                        The number which was written actually is returned.</p>
                    </content>
                </item>
                <item>
                    <name>type</name>
                    <type>in</type>
                    <content>
                        Specify the type of macro variables to be written from followings.
                        <table class="dd">
                            <tr><td>0</td><td>:</td><td>conversation</td></tr>
                            <tr><td>1</td><td>:</td><td>auxiliary   </td></tr>
                            <tr><td>2</td><td>:</td><td>execution   </td></tr>
                        </table>
                        * This setting is ignored in case of P code macro variables, 10000,..,89999 and the variables for High-speed cycle cutting.
                    </content>
                </item>
                <item>
                    <name>pmacror</name>
                    <type>in</type>
                    <content>
                        <p>Specify the array for written P code macro variables.</p>
                    </content>
                </item>
            </cmn>
        </common>
    </argument>



    <errcode>
        <item>
            <name>EW_LENGTH</name>
            <content>Data block length error<br/>The number of P code macro variables(*num) is 0 or less.</content>
        </item>
        <item>
            <name>EW_NUMBER</name>
            <content>Data number error<br/>P code macro variable number(stnum) is wrong.</content>
        </item>
        <item>
            <name>EW_ATTRIB</name>
            <content>Data attribute error<br/>Type of P code macro variables(type) is wrong.</content>
        </item>
        <item>
            <name>EW_NOOPT</name>
            <content>No option<br/>This function needs the macro-executor option.</content>
        </item>
        <add></add>
    </errcode>



    <option>
        <hssb>The extended driver/library function is necessary.</hssb>
        <ethr><p>The Ethernet function and the extended driver/library function are necessary.</p>
              <p>However, in case of Series 0i-D, Series 30i and PMi-A, the required CNC option is as follows.</p>
              <p>When Embedded Ethernet is used,</p>
              <p><ul>above two optional functions are not required.</ul></p>
              <p>When Ethernet board is used,</p>
              <p><ul>only Ethernet function is required.</ul></p>
        </ethr>
        <need>The macro-executor function.</need>
<!--
        <type class="xis">
            <li>Series 16/18, 16i/18i</li>
            This function is related to the high-speed cycle cutting option.
        </type>
-->
    </option>



    <parameter>
        <add>
            <p>But, this function is related to the compile parameter of the macro-executor. See the "PROGRAMING MANUAL" of the macro-executor for details of the compile parameter.</p>
        </add>
    </parameter>



    <mode>
    </mode>



    <support>
        <m>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>O</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </m>
        <t>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>O</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </t>
        <lc>
            <fs0ia>X</fs0ia>
            <fs0ib>X</fs0ib>
            <fs0id>X</fs0id>
            <fs15>X</fs15>
            <fs15i>X</fs15i>
            <fs16>X</fs16>
            <fs18>X</fs18>
            <fs21>X</fs21>
            <fs16ia>X</fs16ia>
            <fs18ia>X</fs18ia>
            <fs21ia>X</fs21ia>
            <fs16ib>X</fs16ib>
            <fs18ib>X</fs18ib>
            <fs21ib>X</fs21ib>
            <fs30ia>X</fs30ia>
            <fs30ib>X</fs30ib>
        </lc>
        <p>
            <fs0id>O</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </p>
        <l>
            <fs0id>X</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>X</fs30ia>
            <fs30ib>O</fs30ib>
        </l>
        <w>
            <fs0id>X</fs0id>
            <fs16i>X</fs16i>
            <fs18i>X</fs18i>
            <fs30ia>O</fs30ia>
            <fs30ib>O</fs30ib>
        </w>
        <pw>
            <d>X</d>
            <h>X</h>
            <a>O</a>
        </pw>
        <add><b></b></add>

        <is>
            <m>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </m>
            <t>
                <fs30isa>O</fs30isa>
                <fs30isb>O</fs30isb>
            </t>
            <w>
                <fs30isa>O</fs30isa>
                <fs30isb>X</fs30isb>
            </w>
        </is>
    </support>



    <reference>
        <item>
            <name>cnc_rdpmacro</name>
            <file>ncdata/cnc_rdpmacro.htm</file>
        </item>
        <item>
            <name>cnc_wrpmacro</name>
            <file>ncdata/cnc_wrpmacro.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacror</name>
            <file>ncdata/cnc_rdpmacror.htm</file>
        </item>
        <item>
            <name>cnc_wrpmacror</name>
            <file>ncdata/cnc_wrpmacror.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacror2</name>
            <file>ncdata/cnc_rdpmacror2.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacroinfo</name>
            <file>ncdata/cnc_rdpmacroinfo.htm</file>
        </item>
        <item>
            <name>cnc_rdpmacroinfo2</name>
            <file>ncdata/cnc_rdpmacroinfo2.htm</file>
        </item>
        <item>
            <name>cnc_getpmactype</name>
            <file>ncdata/cnc_getpmactype.htm</file>
        </item>
        <item>
            <name>cnc_setpmactype</name>
            <file>ncdata/cnc_setpmactype.htm</file>
        </item>
    </reference>



    <example>
<vc>
The method of writing "vacant" data.

#include "fwlib32.h"

short example( void )
{
    unsigned long   s_no;
    unsigned long   num;
    unsigned short  type = 0;
    double      mcval;
    long        *wval;

    num = 1;
    wval = (long*)&#38;mcval;
    *wval++ = (long)0xffffffff;
    *wval   = (long)0xffffffff;
    ret = cnc_wrpmacror2( Hndl, s_no, &#38;num, type, &#38;mcval );

}
</vc>
    </example>



  </func>
</root>
